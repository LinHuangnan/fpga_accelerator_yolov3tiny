// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Add_Char6.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Add_Char6::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Add_Char6::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> Add_Char6::ap_ST_fsm_state1 = "1";
const sc_lv<5> Add_Char6::ap_ST_fsm_state2 = "10";
const sc_lv<5> Add_Char6::ap_ST_fsm_state3 = "100";
const sc_lv<5> Add_Char6::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<5> Add_Char6::ap_ST_fsm_state7 = "10000";
const bool Add_Char6::ap_const_boolean_1 = true;
const sc_lv<32> Add_Char6::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Add_Char6::ap_const_lv32_3 = "11";
const bool Add_Char6::ap_const_boolean_0 = false;
const sc_lv<1> Add_Char6::ap_const_lv1_0 = "0";
const sc_lv<32> Add_Char6::ap_const_lv32_1 = "1";
const sc_lv<32> Add_Char6::ap_const_lv32_2 = "10";
const sc_lv<1> Add_Char6::ap_const_lv1_1 = "1";
const sc_lv<10> Add_Char6::ap_const_lv10_0 = "0000000000";
const sc_lv<32> Add_Char6::ap_const_lv32_4 = "100";
const sc_lv<11> Add_Char6::ap_const_lv11_0 = "00000000000";
const sc_lv<8> Add_Char6::ap_const_lv8_1A = "11010";
const sc_lv<17> Add_Char6::ap_const_lv17_40 = "1000000";
const sc_lv<5> Add_Char6::ap_const_lv5_0 = "00000";
const sc_lv<17> Add_Char6::ap_const_lv17_20 = "100000";
const sc_lv<10> Add_Char6::ap_const_lv10_2D0 = "1011010000";
const sc_lv<10> Add_Char6::ap_const_lv10_1 = "1";
const sc_lv<32> Add_Char6::ap_const_lv32_B = "1011";
const sc_lv<11> Add_Char6::ap_const_lv11_500 = "10100000000";
const sc_lv<11> Add_Char6::ap_const_lv11_1 = "1";
const sc_lv<32> Add_Char6::ap_const_lv32_F = "1111";
const sc_lv<16> Add_Char6::ap_const_lv16_1 = "1";
const sc_lv<16> Add_Char6::ap_const_lv16_0 = "0000000000000000";
const sc_lv<8> Add_Char6::ap_const_lv8_FF = "11111111";
const sc_lv<8> Add_Char6::ap_const_lv8_0 = "00000000";

Add_Char6::Add_Char6(sc_module_name name) : sc_module(name), mVcdFile(0) {
    letter298_U = new Add_Char1_letter("letter298_U");
    letter298_U->clk(ap_clk);
    letter298_U->reset(ap_rst);
    letter298_U->address0(letter298_address0);
    letter298_U->ce0(letter298_ce0);
    letter298_U->q0(letter298_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln250_fu_409_p2);
    sensitive << ( zext_ln250_fu_405_p1 );

    SC_METHOD(thread_add_ln252_fu_477_p2);
    sensitive << ( zext_ln252_cast_reg_685 );
    sensitive << ( zext_ln252_1_cast_fu_467_p4 );

    SC_METHOD(thread_add_ln253_fu_431_p2);
    sensitive << ( zext_ln253_fu_427_p1 );

    SC_METHOD(thread_and_ln253_1_fu_592_p2);
    sensitive << ( and_ln253_fu_587_p2 );
    sensitive << ( xor_ln253_fu_536_p2 );

    SC_METHOD(thread_and_ln253_fu_587_p2);
    sensitive << ( xor_ln250_reg_708 );
    sensitive << ( icmp_ln253_1_fu_546_p2 );

    SC_METHOD(thread_and_ln791_fu_576_p2);
    sensitive << ( p_Val2_s_reg_713 );
    sensitive << ( shl_ln791_fu_570_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( src_data_stream_3_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( dst_data_stream_3_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln245_reg_718 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( src_data_stream_3_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( dst_data_stream_3_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln245_reg_718 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( src_data_stream_3_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( dst_data_stream_3_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln245_reg_718 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ch6x_loc_empty_n );
    sensitive << ( ytop_s_empty_n );
    sensitive << ( char6_empty_n );
    sensitive << ( color1_empty_n );
    sensitive << ( color2_empty_n );
    sensitive << ( color3_empty_n );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( src_data_stream_3_V_empty_n );
    sensitive << ( icmp_ln245_reg_718 );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter2);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( dst_data_stream_3_V_full_n );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( icmp_ln245_fu_519_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln243_fu_441_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ch6x_loc_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ch6x_loc_empty_n );

    SC_METHOD(thread_ch6x_loc_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ch6x_loc_empty_n );
    sensitive << ( ytop_s_empty_n );
    sensitive << ( char6_empty_n );
    sensitive << ( color1_empty_n );
    sensitive << ( color2_empty_n );
    sensitive << ( color3_empty_n );

    SC_METHOD(thread_char6_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( char6_empty_n );

    SC_METHOD(thread_char6_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ch6x_loc_empty_n );
    sensitive << ( ytop_s_empty_n );
    sensitive << ( char6_empty_n );
    sensitive << ( color1_empty_n );
    sensitive << ( color2_empty_n );
    sensitive << ( color3_empty_n );

    SC_METHOD(thread_color1_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( color1_empty_n );

    SC_METHOD(thread_color1_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ch6x_loc_empty_n );
    sensitive << ( ytop_s_empty_n );
    sensitive << ( char6_empty_n );
    sensitive << ( color1_empty_n );
    sensitive << ( color2_empty_n );
    sensitive << ( color3_empty_n );

    SC_METHOD(thread_color2_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( color2_empty_n );

    SC_METHOD(thread_color2_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ch6x_loc_empty_n );
    sensitive << ( ytop_s_empty_n );
    sensitive << ( char6_empty_n );
    sensitive << ( color1_empty_n );
    sensitive << ( color2_empty_n );
    sensitive << ( color3_empty_n );

    SC_METHOD(thread_color3_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( color3_empty_n );

    SC_METHOD(thread_color3_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ch6x_loc_empty_n );
    sensitive << ( ytop_s_empty_n );
    sensitive << ( char6_empty_n );
    sensitive << ( color1_empty_n );
    sensitive << ( color2_empty_n );
    sensitive << ( color3_empty_n );

    SC_METHOD(thread_dst_data_stream_0_V_blk_n);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );

    SC_METHOD(thread_dst_data_stream_0_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );
    sensitive << ( tmp_reg_742 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_data_stream_0_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dst_data_stream_1_V_blk_n);
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );

    SC_METHOD(thread_dst_data_stream_1_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );
    sensitive << ( tmp_13_reg_747 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_data_stream_1_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dst_data_stream_2_V_blk_n);
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );

    SC_METHOD(thread_dst_data_stream_2_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );
    sensitive << ( tmp_14_reg_752 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_data_stream_2_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dst_data_stream_3_V_blk_n);
    sensitive << ( dst_data_stream_3_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );

    SC_METHOD(thread_dst_data_stream_3_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );
    sensitive << ( tmp_15_reg_757 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_data_stream_3_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln245_reg_718_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_447_p2);
    sensitive << ( i_0_i_i_reg_377 );

    SC_METHOD(thread_icmp_ln243_fu_441_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i_i_reg_377 );

    SC_METHOD(thread_icmp_ln245_fu_519_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_0_i_i_reg_388 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln249_fu_399_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ch6x_loc_empty_n );
    sensitive << ( ytop_s_empty_n );
    sensitive << ( char6_dout );
    sensitive << ( char6_empty_n );
    sensitive << ( color1_empty_n );
    sensitive << ( color2_empty_n );
    sensitive << ( color3_empty_n );

    SC_METHOD(thread_icmp_ln250_1_fu_487_p2);
    sensitive << ( add_ln250_reg_680 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln243_fu_441_p2 );
    sensitive << ( zext_ln251_fu_458_p1 );

    SC_METHOD(thread_icmp_ln250_fu_453_p2);
    sensitive << ( ytop_read_reg_644 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln243_fu_441_p2 );
    sensitive << ( zext_ln243_fu_437_p1 );

    SC_METHOD(thread_icmp_ln253_1_fu_546_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln253_reg_690 );
    sensitive << ( icmp_ln245_fu_519_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln253_1_fu_542_p1 );

    SC_METHOD(thread_icmp_ln253_fu_531_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ch6x_loc_read_reg_664 );
    sensitive << ( icmp_ln245_fu_519_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln245_fu_515_p1 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln243_fu_441_p2 );

    SC_METHOD(thread_j_fu_525_p2);
    sensitive << ( j_0_i_i_reg_388 );

    SC_METHOD(thread_letter298_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln252_fu_482_p1 );

    SC_METHOD(thread_letter298_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_or_ln250_1_fu_503_p2);
    sensitive << ( or_ln250_fu_498_p2 );
    sensitive << ( icmp_ln250_fu_453_p2 );

    SC_METHOD(thread_or_ln250_fu_498_p2);
    sensitive << ( icmp_ln249_reg_670 );
    sensitive << ( xor_ln250_1_fu_492_p2 );

    SC_METHOD(thread_p_Result_s_fu_581_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln245_fu_519_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( and_ln791_fu_576_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_select_ln255_1_fu_604_p3);
    sensitive << ( markpix_val_1_reg_654 );
    sensitive << ( p_Result_s_reg_727 );

    SC_METHOD(thread_select_ln255_2_fu_610_p3);
    sensitive << ( markpix_val_2_reg_659 );
    sensitive << ( p_Result_s_reg_727 );

    SC_METHOD(thread_select_ln255_fu_598_p3);
    sensitive << ( markpix_val_0_reg_649 );
    sensitive << ( p_Result_s_reg_727 );

    SC_METHOD(thread_shl_ln791_fu_570_p2);
    sensitive << ( xos_fu_566_p1 );

    SC_METHOD(thread_src_data_stream_0_V_blk_n);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln245_reg_718 );

    SC_METHOD(thread_src_data_stream_0_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln245_reg_718 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_src_data_stream_1_V_blk_n);
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln245_reg_718 );

    SC_METHOD(thread_src_data_stream_1_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln245_reg_718 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_src_data_stream_2_V_blk_n);
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln245_reg_718 );

    SC_METHOD(thread_src_data_stream_2_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln245_reg_718 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_src_data_stream_3_V_blk_n);
    sensitive << ( src_data_stream_3_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln245_reg_718 );

    SC_METHOD(thread_src_data_stream_3_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln245_reg_718 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sub_ln251_fu_462_p2);
    sensitive << ( zext_ln250_reg_675 );
    sensitive << ( zext_ln251_fu_458_p1 );

    SC_METHOD(thread_sub_ln254_fu_551_p2);
    sensitive << ( ch6x_loc_read_reg_664 );
    sensitive << ( zext_ln245_fu_515_p1 );

    SC_METHOD(thread_tmp_13_fu_623_p3);
    sensitive << ( src_data_stream_1_V_dout );
    sensitive << ( and_ln253_1_reg_734 );
    sensitive << ( select_ln255_1_fu_604_p3 );

    SC_METHOD(thread_tmp_14_fu_630_p3);
    sensitive << ( src_data_stream_2_V_dout );
    sensitive << ( and_ln253_1_reg_734 );
    sensitive << ( select_ln255_2_fu_610_p3 );

    SC_METHOD(thread_tmp_15_fu_637_p3);
    sensitive << ( src_data_stream_3_V_dout );
    sensitive << ( and_ln253_1_reg_734 );

    SC_METHOD(thread_tmp_fu_616_p3);
    sensitive << ( src_data_stream_0_V_dout );
    sensitive << ( and_ln253_1_reg_734 );
    sensitive << ( select_ln255_fu_598_p3 );

    SC_METHOD(thread_trunc_ln253_fu_415_p1);
    sensitive << ( char6_dout );

    SC_METHOD(thread_trunc_ln_fu_556_p4);
    sensitive << ( sub_ln254_fu_551_p2 );

    SC_METHOD(thread_xor_ln250_1_fu_492_p2);
    sensitive << ( icmp_ln250_1_fu_487_p2 );

    SC_METHOD(thread_xor_ln250_fu_509_p2);
    sensitive << ( or_ln250_1_fu_503_p2 );

    SC_METHOD(thread_xor_ln253_fu_536_p2);
    sensitive << ( icmp_ln253_fu_531_p2 );

    SC_METHOD(thread_xos_fu_566_p1);
    sensitive << ( trunc_ln_fu_556_p4 );

    SC_METHOD(thread_ytop_s_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ytop_s_empty_n );

    SC_METHOD(thread_ytop_s_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ch6x_loc_empty_n );
    sensitive << ( ytop_s_empty_n );
    sensitive << ( char6_empty_n );
    sensitive << ( color1_empty_n );
    sensitive << ( color2_empty_n );
    sensitive << ( color3_empty_n );

    SC_METHOD(thread_zext_ln243_fu_437_p1);
    sensitive << ( i_0_i_i_reg_377 );

    SC_METHOD(thread_zext_ln245_fu_515_p1);
    sensitive << ( j_0_i_i_reg_388 );

    SC_METHOD(thread_zext_ln250_fu_405_p1);
    sensitive << ( ytop_s_dout );

    SC_METHOD(thread_zext_ln251_fu_458_p1);
    sensitive << ( i_0_i_i_reg_377 );

    SC_METHOD(thread_zext_ln252_1_cast_fu_467_p4);
    sensitive << ( sub_ln251_fu_462_p2 );

    SC_METHOD(thread_zext_ln252_cast_fu_419_p3);
    sensitive << ( trunc_ln253_fu_415_p1 );

    SC_METHOD(thread_zext_ln252_fu_482_p1);
    sensitive << ( add_ln252_fu_477_p2 );

    SC_METHOD(thread_zext_ln253_1_fu_542_p1);
    sensitive << ( j_0_i_i_reg_388 );

    SC_METHOD(thread_zext_ln253_fu_427_p1);
    sensitive << ( ch6x_loc_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ch6x_loc_empty_n );
    sensitive << ( ytop_s_empty_n );
    sensitive << ( char6_empty_n );
    sensitive << ( color1_empty_n );
    sensitive << ( color2_empty_n );
    sensitive << ( color3_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln243_fu_441_p2 );
    sensitive << ( icmp_ln245_fu_519_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Add_Char6_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, src_data_stream_0_V_dout, "(port)src_data_stream_0_V_dout");
    sc_trace(mVcdFile, src_data_stream_0_V_empty_n, "(port)src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_0_V_read, "(port)src_data_stream_0_V_read");
    sc_trace(mVcdFile, src_data_stream_1_V_dout, "(port)src_data_stream_1_V_dout");
    sc_trace(mVcdFile, src_data_stream_1_V_empty_n, "(port)src_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_1_V_read, "(port)src_data_stream_1_V_read");
    sc_trace(mVcdFile, src_data_stream_2_V_dout, "(port)src_data_stream_2_V_dout");
    sc_trace(mVcdFile, src_data_stream_2_V_empty_n, "(port)src_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_2_V_read, "(port)src_data_stream_2_V_read");
    sc_trace(mVcdFile, src_data_stream_3_V_dout, "(port)src_data_stream_3_V_dout");
    sc_trace(mVcdFile, src_data_stream_3_V_empty_n, "(port)src_data_stream_3_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_3_V_read, "(port)src_data_stream_3_V_read");
    sc_trace(mVcdFile, dst_data_stream_0_V_din, "(port)dst_data_stream_0_V_din");
    sc_trace(mVcdFile, dst_data_stream_0_V_full_n, "(port)dst_data_stream_0_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_write, "(port)dst_data_stream_0_V_write");
    sc_trace(mVcdFile, dst_data_stream_1_V_din, "(port)dst_data_stream_1_V_din");
    sc_trace(mVcdFile, dst_data_stream_1_V_full_n, "(port)dst_data_stream_1_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_1_V_write, "(port)dst_data_stream_1_V_write");
    sc_trace(mVcdFile, dst_data_stream_2_V_din, "(port)dst_data_stream_2_V_din");
    sc_trace(mVcdFile, dst_data_stream_2_V_full_n, "(port)dst_data_stream_2_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_write, "(port)dst_data_stream_2_V_write");
    sc_trace(mVcdFile, dst_data_stream_3_V_din, "(port)dst_data_stream_3_V_din");
    sc_trace(mVcdFile, dst_data_stream_3_V_full_n, "(port)dst_data_stream_3_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_3_V_write, "(port)dst_data_stream_3_V_write");
    sc_trace(mVcdFile, ch6x_loc_dout, "(port)ch6x_loc_dout");
    sc_trace(mVcdFile, ch6x_loc_empty_n, "(port)ch6x_loc_empty_n");
    sc_trace(mVcdFile, ch6x_loc_read, "(port)ch6x_loc_read");
    sc_trace(mVcdFile, ytop_s_dout, "(port)ytop_s_dout");
    sc_trace(mVcdFile, ytop_s_empty_n, "(port)ytop_s_empty_n");
    sc_trace(mVcdFile, ytop_s_read, "(port)ytop_s_read");
    sc_trace(mVcdFile, char6_dout, "(port)char6_dout");
    sc_trace(mVcdFile, char6_empty_n, "(port)char6_empty_n");
    sc_trace(mVcdFile, char6_read, "(port)char6_read");
    sc_trace(mVcdFile, color1_dout, "(port)color1_dout");
    sc_trace(mVcdFile, color1_empty_n, "(port)color1_empty_n");
    sc_trace(mVcdFile, color1_read, "(port)color1_read");
    sc_trace(mVcdFile, color2_dout, "(port)color2_dout");
    sc_trace(mVcdFile, color2_empty_n, "(port)color2_empty_n");
    sc_trace(mVcdFile, color2_read, "(port)color2_read");
    sc_trace(mVcdFile, color3_dout, "(port)color3_dout");
    sc_trace(mVcdFile, color3_empty_n, "(port)color3_empty_n");
    sc_trace(mVcdFile, color3_read, "(port)color3_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, letter298_address0, "letter298_address0");
    sc_trace(mVcdFile, letter298_ce0, "letter298_ce0");
    sc_trace(mVcdFile, letter298_q0, "letter298_q0");
    sc_trace(mVcdFile, src_data_stream_0_V_blk_n, "src_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln245_reg_718, "icmp_ln245_reg_718");
    sc_trace(mVcdFile, src_data_stream_1_V_blk_n, "src_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, src_data_stream_2_V_blk_n, "src_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, src_data_stream_3_V_blk_n, "src_data_stream_3_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_blk_n, "dst_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln245_reg_718_pp0_iter1_reg, "icmp_ln245_reg_718_pp0_iter1_reg");
    sc_trace(mVcdFile, dst_data_stream_1_V_blk_n, "dst_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_blk_n, "dst_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_3_V_blk_n, "dst_data_stream_3_V_blk_n");
    sc_trace(mVcdFile, ch6x_loc_blk_n, "ch6x_loc_blk_n");
    sc_trace(mVcdFile, ytop_s_blk_n, "ytop_s_blk_n");
    sc_trace(mVcdFile, char6_blk_n, "char6_blk_n");
    sc_trace(mVcdFile, color1_blk_n, "color1_blk_n");
    sc_trace(mVcdFile, color2_blk_n, "color2_blk_n");
    sc_trace(mVcdFile, color3_blk_n, "color3_blk_n");
    sc_trace(mVcdFile, j_0_i_i_reg_388, "j_0_i_i_reg_388");
    sc_trace(mVcdFile, ytop_read_reg_644, "ytop_read_reg_644");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, markpix_val_0_reg_649, "markpix_val_0_reg_649");
    sc_trace(mVcdFile, markpix_val_1_reg_654, "markpix_val_1_reg_654");
    sc_trace(mVcdFile, markpix_val_2_reg_659, "markpix_val_2_reg_659");
    sc_trace(mVcdFile, ch6x_loc_read_reg_664, "ch6x_loc_read_reg_664");
    sc_trace(mVcdFile, icmp_ln249_fu_399_p2, "icmp_ln249_fu_399_p2");
    sc_trace(mVcdFile, icmp_ln249_reg_670, "icmp_ln249_reg_670");
    sc_trace(mVcdFile, zext_ln250_fu_405_p1, "zext_ln250_fu_405_p1");
    sc_trace(mVcdFile, zext_ln250_reg_675, "zext_ln250_reg_675");
    sc_trace(mVcdFile, add_ln250_fu_409_p2, "add_ln250_fu_409_p2");
    sc_trace(mVcdFile, add_ln250_reg_680, "add_ln250_reg_680");
    sc_trace(mVcdFile, zext_ln252_cast_fu_419_p3, "zext_ln252_cast_fu_419_p3");
    sc_trace(mVcdFile, zext_ln252_cast_reg_685, "zext_ln252_cast_reg_685");
    sc_trace(mVcdFile, add_ln253_fu_431_p2, "add_ln253_fu_431_p2");
    sc_trace(mVcdFile, add_ln253_reg_690, "add_ln253_reg_690");
    sc_trace(mVcdFile, i_fu_447_p2, "i_fu_447_p2");
    sc_trace(mVcdFile, i_reg_698, "i_reg_698");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln243_fu_441_p2, "icmp_ln243_fu_441_p2");
    sc_trace(mVcdFile, xor_ln250_fu_509_p2, "xor_ln250_fu_509_p2");
    sc_trace(mVcdFile, xor_ln250_reg_708, "xor_ln250_reg_708");
    sc_trace(mVcdFile, p_Val2_s_reg_713, "p_Val2_s_reg_713");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln245_fu_519_p2, "icmp_ln245_fu_519_p2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter2, "ap_block_state6_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_fu_525_p2, "j_fu_525_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, p_Result_s_fu_581_p2, "p_Result_s_fu_581_p2");
    sc_trace(mVcdFile, p_Result_s_reg_727, "p_Result_s_reg_727");
    sc_trace(mVcdFile, and_ln253_1_fu_592_p2, "and_ln253_1_fu_592_p2");
    sc_trace(mVcdFile, and_ln253_1_reg_734, "and_ln253_1_reg_734");
    sc_trace(mVcdFile, tmp_fu_616_p3, "tmp_fu_616_p3");
    sc_trace(mVcdFile, tmp_reg_742, "tmp_reg_742");
    sc_trace(mVcdFile, tmp_13_fu_623_p3, "tmp_13_fu_623_p3");
    sc_trace(mVcdFile, tmp_13_reg_747, "tmp_13_reg_747");
    sc_trace(mVcdFile, tmp_14_fu_630_p3, "tmp_14_fu_630_p3");
    sc_trace(mVcdFile, tmp_14_reg_752, "tmp_14_reg_752");
    sc_trace(mVcdFile, tmp_15_fu_637_p3, "tmp_15_fu_637_p3");
    sc_trace(mVcdFile, tmp_15_reg_757, "tmp_15_reg_757");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, i_0_i_i_reg_377, "i_0_i_i_reg_377");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln252_fu_482_p1, "zext_ln252_fu_482_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, trunc_ln253_fu_415_p1, "trunc_ln253_fu_415_p1");
    sc_trace(mVcdFile, zext_ln253_fu_427_p1, "zext_ln253_fu_427_p1");
    sc_trace(mVcdFile, zext_ln243_fu_437_p1, "zext_ln243_fu_437_p1");
    sc_trace(mVcdFile, zext_ln251_fu_458_p1, "zext_ln251_fu_458_p1");
    sc_trace(mVcdFile, sub_ln251_fu_462_p2, "sub_ln251_fu_462_p2");
    sc_trace(mVcdFile, zext_ln252_1_cast_fu_467_p4, "zext_ln252_1_cast_fu_467_p4");
    sc_trace(mVcdFile, add_ln252_fu_477_p2, "add_ln252_fu_477_p2");
    sc_trace(mVcdFile, icmp_ln250_1_fu_487_p2, "icmp_ln250_1_fu_487_p2");
    sc_trace(mVcdFile, xor_ln250_1_fu_492_p2, "xor_ln250_1_fu_492_p2");
    sc_trace(mVcdFile, or_ln250_fu_498_p2, "or_ln250_fu_498_p2");
    sc_trace(mVcdFile, icmp_ln250_fu_453_p2, "icmp_ln250_fu_453_p2");
    sc_trace(mVcdFile, or_ln250_1_fu_503_p2, "or_ln250_1_fu_503_p2");
    sc_trace(mVcdFile, zext_ln245_fu_515_p1, "zext_ln245_fu_515_p1");
    sc_trace(mVcdFile, icmp_ln253_fu_531_p2, "icmp_ln253_fu_531_p2");
    sc_trace(mVcdFile, zext_ln253_1_fu_542_p1, "zext_ln253_1_fu_542_p1");
    sc_trace(mVcdFile, sub_ln254_fu_551_p2, "sub_ln254_fu_551_p2");
    sc_trace(mVcdFile, trunc_ln_fu_556_p4, "trunc_ln_fu_556_p4");
    sc_trace(mVcdFile, xos_fu_566_p1, "xos_fu_566_p1");
    sc_trace(mVcdFile, shl_ln791_fu_570_p2, "shl_ln791_fu_570_p2");
    sc_trace(mVcdFile, and_ln791_fu_576_p2, "and_ln791_fu_576_p2");
    sc_trace(mVcdFile, icmp_ln253_1_fu_546_p2, "icmp_ln253_1_fu_546_p2");
    sc_trace(mVcdFile, and_ln253_fu_587_p2, "and_ln253_fu_587_p2");
    sc_trace(mVcdFile, xor_ln253_fu_536_p2, "xor_ln253_fu_536_p2");
    sc_trace(mVcdFile, select_ln255_fu_598_p3, "select_ln255_fu_598_p3");
    sc_trace(mVcdFile, select_ln255_1_fu_604_p3, "select_ln255_1_fu_604_p3");
    sc_trace(mVcdFile, select_ln255_2_fu_610_p3, "select_ln255_2_fu_610_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Add_Char6::~Add_Char6() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete letter298_U;
}

void Add_Char6::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln243_fu_441_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state4.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_0_i_i_reg_377 = i_reg_698.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_s_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, char6_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color2_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color3_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ch6x_loc_empty_n.read())))) {
        i_0_i_i_reg_377 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_fu_519_p2.read()))) {
        j_0_i_i_reg_388 = j_fu_525_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_0_i_i_reg_388 = ap_const_lv11_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_s_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, char6_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color2_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color3_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ch6x_loc_empty_n.read())))) {
        add_ln250_reg_680 = add_ln250_fu_409_p2.read();
        add_ln253_reg_690 = add_ln253_fu_431_p2.read();
        ch6x_loc_read_reg_664 = ch6x_loc_dout.read();
        icmp_ln249_reg_670 = icmp_ln249_fu_399_p2.read();
        markpix_val_0_reg_649 = color1_dout.read();
        markpix_val_1_reg_654 = color2_dout.read();
        markpix_val_2_reg_659 = color3_dout.read();
        ytop_read_reg_644 = ytop_s_dout.read();
        zext_ln250_reg_675 = zext_ln250_fu_405_p1.read();
        zext_ln252_cast_reg_685 = zext_ln252_cast_fu_419_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_fu_519_p2.read()))) {
        and_ln253_1_reg_734 = and_ln253_1_fu_592_p2.read();
        p_Result_s_reg_727 = p_Result_s_fu_581_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_698 = i_fu_447_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln245_reg_718 = icmp_ln245_fu_519_p2.read();
        icmp_ln245_reg_718_pp0_iter1_reg = icmp_ln245_reg_718.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Val2_s_reg_713 = letter298_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_13_reg_747 = tmp_13_fu_623_p3.read();
        tmp_14_reg_752 = tmp_14_fu_630_p3.read();
        tmp_15_reg_757 = tmp_15_fu_637_p3.read();
        tmp_reg_742 = tmp_fu_616_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln243_fu_441_p2.read()))) {
        xor_ln250_reg_708 = xor_ln250_fu_509_p2.read();
    }
}

void Add_Char6::thread_add_ln250_fu_409_p2() {
    add_ln250_fu_409_p2 = (!ap_const_lv17_40.is_01() || !zext_ln250_fu_405_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_40) + sc_biguint<17>(zext_ln250_fu_405_p1.read()));
}

void Add_Char6::thread_add_ln252_fu_477_p2() {
    add_ln252_fu_477_p2 = (!zext_ln252_cast_reg_685.read().is_01() || !zext_ln252_1_cast_fu_467_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln252_cast_reg_685.read()) + sc_biguint<11>(zext_ln252_1_cast_fu_467_p4.read()));
}

void Add_Char6::thread_add_ln253_fu_431_p2() {
    add_ln253_fu_431_p2 = (!ap_const_lv17_20.is_01() || !zext_ln253_fu_427_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_20) + sc_biguint<17>(zext_ln253_fu_427_p1.read()));
}

void Add_Char6::thread_and_ln253_1_fu_592_p2() {
    and_ln253_1_fu_592_p2 = (and_ln253_fu_587_p2.read() & xor_ln253_fu_536_p2.read());
}

void Add_Char6::thread_and_ln253_fu_587_p2() {
    and_ln253_fu_587_p2 = (icmp_ln253_1_fu_546_p2.read() & xor_ln250_reg_708.read());
}

void Add_Char6::thread_and_ln791_fu_576_p2() {
    and_ln791_fu_576_p2 = (p_Val2_s_reg_713.read() & shl_ln791_fu_570_p2.read());
}

void Add_Char6::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void Add_Char6::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Add_Char6::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Add_Char6::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Add_Char6::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[4];
}

void Add_Char6::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Add_Char6::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_3_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_3_V_full_n.read())))));
}

void Add_Char6::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_3_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_3_V_full_n.read())))));
}

void Add_Char6::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_3_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_3_V_full_n.read())))));
}

void Add_Char6::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_s_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, char6_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color2_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color3_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ch6x_loc_empty_n.read()));
}

void Add_Char6::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Add_Char6::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_3_V_empty_n.read())));
}

void Add_Char6::thread_ap_block_state6_pp0_stage0_iter2() {
    ap_block_state6_pp0_stage0_iter2 = ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_3_V_full_n.read())));
}

void Add_Char6::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(icmp_ln245_fu_519_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void Add_Char6::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln243_fu_441_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Add_Char6::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Add_Char6::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Add_Char6::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Add_Char6::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Add_Char6::thread_ch6x_loc_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ch6x_loc_blk_n = ch6x_loc_empty_n.read();
    } else {
        ch6x_loc_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_ch6x_loc_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_s_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, char6_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color2_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color3_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ch6x_loc_empty_n.read())))) {
        ch6x_loc_read = ap_const_logic_1;
    } else {
        ch6x_loc_read = ap_const_logic_0;
    }
}

void Add_Char6::thread_char6_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        char6_blk_n = char6_empty_n.read();
    } else {
        char6_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_char6_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_s_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, char6_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color2_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color3_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ch6x_loc_empty_n.read())))) {
        char6_read = ap_const_logic_1;
    } else {
        char6_read = ap_const_logic_0;
    }
}

void Add_Char6::thread_color1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        color1_blk_n = color1_empty_n.read();
    } else {
        color1_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_color1_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_s_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, char6_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color2_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color3_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ch6x_loc_empty_n.read())))) {
        color1_read = ap_const_logic_1;
    } else {
        color1_read = ap_const_logic_0;
    }
}

void Add_Char6::thread_color2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        color2_blk_n = color2_empty_n.read();
    } else {
        color2_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_color2_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_s_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, char6_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color2_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color3_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ch6x_loc_empty_n.read())))) {
        color2_read = ap_const_logic_1;
    } else {
        color2_read = ap_const_logic_0;
    }
}

void Add_Char6::thread_color3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        color3_blk_n = color3_empty_n.read();
    } else {
        color3_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_color3_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_s_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, char6_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color2_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color3_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ch6x_loc_empty_n.read())))) {
        color3_read = ap_const_logic_1;
    } else {
        color3_read = ap_const_logic_0;
    }
}

void Add_Char6::thread_dst_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()))) {
        dst_data_stream_0_V_blk_n = dst_data_stream_0_V_full_n.read();
    } else {
        dst_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_dst_data_stream_0_V_din() {
    dst_data_stream_0_V_din = tmp_reg_742.read();
}

void Add_Char6::thread_dst_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_0_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_0_V_write = ap_const_logic_0;
    }
}

void Add_Char6::thread_dst_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()))) {
        dst_data_stream_1_V_blk_n = dst_data_stream_1_V_full_n.read();
    } else {
        dst_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_dst_data_stream_1_V_din() {
    dst_data_stream_1_V_din = tmp_13_reg_747.read();
}

void Add_Char6::thread_dst_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_1_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_1_V_write = ap_const_logic_0;
    }
}

void Add_Char6::thread_dst_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()))) {
        dst_data_stream_2_V_blk_n = dst_data_stream_2_V_full_n.read();
    } else {
        dst_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_dst_data_stream_2_V_din() {
    dst_data_stream_2_V_din = tmp_14_reg_752.read();
}

void Add_Char6::thread_dst_data_stream_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_2_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_2_V_write = ap_const_logic_0;
    }
}

void Add_Char6::thread_dst_data_stream_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()))) {
        dst_data_stream_3_V_blk_n = dst_data_stream_3_V_full_n.read();
    } else {
        dst_data_stream_3_V_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_dst_data_stream_3_V_din() {
    dst_data_stream_3_V_din = tmp_15_reg_757.read();
}

void Add_Char6::thread_dst_data_stream_3_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln245_reg_718_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_3_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_3_V_write = ap_const_logic_0;
    }
}

void Add_Char6::thread_i_fu_447_p2() {
    i_fu_447_p2 = (!i_0_i_i_reg_377.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_0_i_i_reg_377.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void Add_Char6::thread_icmp_ln243_fu_441_p2() {
    icmp_ln243_fu_441_p2 = (!i_0_i_i_reg_377.read().is_01() || !ap_const_lv10_2D0.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_i_reg_377.read() == ap_const_lv10_2D0);
}

void Add_Char6::thread_icmp_ln245_fu_519_p2() {
    icmp_ln245_fu_519_p2 = (!j_0_i_i_reg_388.read().is_01() || !ap_const_lv11_500.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i_i_reg_388.read() == ap_const_lv11_500);
}

void Add_Char6::thread_icmp_ln249_fu_399_p2() {
    icmp_ln249_fu_399_p2 = (!char6_dout.read().is_01() || !ap_const_lv8_1A.is_01())? sc_lv<1>(): sc_lv<1>(char6_dout.read() == ap_const_lv8_1A);
}

void Add_Char6::thread_icmp_ln250_1_fu_487_p2() {
    icmp_ln250_1_fu_487_p2 = (!zext_ln251_fu_458_p1.read().is_01() || !add_ln250_reg_680.read().is_01())? sc_lv<1>(): (sc_biguint<17>(zext_ln251_fu_458_p1.read()) < sc_biguint<17>(add_ln250_reg_680.read()));
}

void Add_Char6::thread_icmp_ln250_fu_453_p2() {
    icmp_ln250_fu_453_p2 = (!zext_ln243_fu_437_p1.read().is_01() || !ytop_read_reg_644.read().is_01())? sc_lv<1>(): (sc_biguint<16>(zext_ln243_fu_437_p1.read()) < sc_biguint<16>(ytop_read_reg_644.read()));
}

void Add_Char6::thread_icmp_ln253_1_fu_546_p2() {
    icmp_ln253_1_fu_546_p2 = (!zext_ln253_1_fu_542_p1.read().is_01() || !add_ln253_reg_690.read().is_01())? sc_lv<1>(): (sc_biguint<17>(zext_ln253_1_fu_542_p1.read()) < sc_biguint<17>(add_ln253_reg_690.read()));
}

void Add_Char6::thread_icmp_ln253_fu_531_p2() {
    icmp_ln253_fu_531_p2 = (!zext_ln245_fu_515_p1.read().is_01() || !ch6x_loc_read_reg_664.read().is_01())? sc_lv<1>(): (sc_biguint<16>(zext_ln245_fu_515_p1.read()) < sc_biguint<16>(ch6x_loc_read_reg_664.read()));
}

void Add_Char6::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln243_fu_441_p2.read(), ap_const_lv1_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Add_Char6::thread_j_fu_525_p2() {
    j_fu_525_p2 = (!j_0_i_i_reg_388.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(j_0_i_i_reg_388.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Add_Char6::thread_letter298_address0() {
    letter298_address0 =  (sc_lv<10>) (zext_ln252_fu_482_p1.read());
}

void Add_Char6::thread_letter298_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        letter298_ce0 = ap_const_logic_1;
    } else {
        letter298_ce0 = ap_const_logic_0;
    }
}

void Add_Char6::thread_or_ln250_1_fu_503_p2() {
    or_ln250_1_fu_503_p2 = (or_ln250_fu_498_p2.read() | icmp_ln250_fu_453_p2.read());
}

void Add_Char6::thread_or_ln250_fu_498_p2() {
    or_ln250_fu_498_p2 = (xor_ln250_1_fu_492_p2.read() | icmp_ln249_reg_670.read());
}

void Add_Char6::thread_p_Result_s_fu_581_p2() {
    p_Result_s_fu_581_p2 = (!and_ln791_fu_576_p2.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(and_ln791_fu_576_p2.read() == ap_const_lv16_0);
}

void Add_Char6::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Add_Char6::thread_select_ln255_1_fu_604_p3() {
    select_ln255_1_fu_604_p3 = (!p_Result_s_reg_727.read()[0].is_01())? sc_lv<8>(): ((p_Result_s_reg_727.read()[0].to_bool())? ap_const_lv8_FF: markpix_val_1_reg_654.read());
}

void Add_Char6::thread_select_ln255_2_fu_610_p3() {
    select_ln255_2_fu_610_p3 = (!p_Result_s_reg_727.read()[0].is_01())? sc_lv<8>(): ((p_Result_s_reg_727.read()[0].to_bool())? ap_const_lv8_FF: markpix_val_2_reg_659.read());
}

void Add_Char6::thread_select_ln255_fu_598_p3() {
    select_ln255_fu_598_p3 = (!p_Result_s_reg_727.read()[0].is_01())? sc_lv<8>(): ((p_Result_s_reg_727.read()[0].to_bool())? ap_const_lv8_FF: markpix_val_0_reg_649.read());
}

void Add_Char6::thread_shl_ln791_fu_570_p2() {
    shl_ln791_fu_570_p2 = (!xos_fu_566_p1.read().is_01())? sc_lv<16>(): ap_const_lv16_1 << (unsigned short)xos_fu_566_p1.read().to_uint();
}

void Add_Char6::thread_src_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0))) {
        src_data_stream_0_V_blk_n = src_data_stream_0_V_empty_n.read();
    } else {
        src_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_src_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_data_stream_0_V_read = ap_const_logic_1;
    } else {
        src_data_stream_0_V_read = ap_const_logic_0;
    }
}

void Add_Char6::thread_src_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0))) {
        src_data_stream_1_V_blk_n = src_data_stream_1_V_empty_n.read();
    } else {
        src_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_src_data_stream_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_data_stream_1_V_read = ap_const_logic_1;
    } else {
        src_data_stream_1_V_read = ap_const_logic_0;
    }
}

void Add_Char6::thread_src_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0))) {
        src_data_stream_2_V_blk_n = src_data_stream_2_V_empty_n.read();
    } else {
        src_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_src_data_stream_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_data_stream_2_V_read = ap_const_logic_1;
    } else {
        src_data_stream_2_V_read = ap_const_logic_0;
    }
}

void Add_Char6::thread_src_data_stream_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0))) {
        src_data_stream_3_V_blk_n = src_data_stream_3_V_empty_n.read();
    } else {
        src_data_stream_3_V_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_src_data_stream_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln245_reg_718.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_data_stream_3_V_read = ap_const_logic_1;
    } else {
        src_data_stream_3_V_read = ap_const_logic_0;
    }
}

void Add_Char6::thread_start_out() {
    start_out = real_start.read();
}

void Add_Char6::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void Add_Char6::thread_sub_ln251_fu_462_p2() {
    sub_ln251_fu_462_p2 = (!zext_ln251_fu_458_p1.read().is_01() || !zext_ln250_reg_675.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln251_fu_458_p1.read()) - sc_biguint<17>(zext_ln250_reg_675.read()));
}

void Add_Char6::thread_sub_ln254_fu_551_p2() {
    sub_ln254_fu_551_p2 = (!zext_ln245_fu_515_p1.read().is_01() || !ch6x_loc_read_reg_664.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln245_fu_515_p1.read()) - sc_biguint<16>(ch6x_loc_read_reg_664.read()));
}

void Add_Char6::thread_tmp_13_fu_623_p3() {
    tmp_13_fu_623_p3 = (!and_ln253_1_reg_734.read()[0].is_01())? sc_lv<8>(): ((and_ln253_1_reg_734.read()[0].to_bool())? select_ln255_1_fu_604_p3.read(): src_data_stream_1_V_dout.read());
}

void Add_Char6::thread_tmp_14_fu_630_p3() {
    tmp_14_fu_630_p3 = (!and_ln253_1_reg_734.read()[0].is_01())? sc_lv<8>(): ((and_ln253_1_reg_734.read()[0].to_bool())? select_ln255_2_fu_610_p3.read(): src_data_stream_2_V_dout.read());
}

void Add_Char6::thread_tmp_15_fu_637_p3() {
    tmp_15_fu_637_p3 = (!and_ln253_1_reg_734.read()[0].is_01())? sc_lv<8>(): ((and_ln253_1_reg_734.read()[0].to_bool())? ap_const_lv8_0: src_data_stream_3_V_dout.read());
}

void Add_Char6::thread_tmp_fu_616_p3() {
    tmp_fu_616_p3 = (!and_ln253_1_reg_734.read()[0].is_01())? sc_lv<8>(): ((and_ln253_1_reg_734.read()[0].to_bool())? select_ln255_fu_598_p3.read(): src_data_stream_0_V_dout.read());
}

void Add_Char6::thread_trunc_ln253_fu_415_p1() {
    trunc_ln253_fu_415_p1 = char6_dout.read().range(6-1, 0);
}

void Add_Char6::thread_trunc_ln_fu_556_p4() {
    trunc_ln_fu_556_p4 = sub_ln254_fu_551_p2.read().range(15, 1);
}

void Add_Char6::thread_xor_ln250_1_fu_492_p2() {
    xor_ln250_1_fu_492_p2 = (icmp_ln250_1_fu_487_p2.read() ^ ap_const_lv1_1);
}

void Add_Char6::thread_xor_ln250_fu_509_p2() {
    xor_ln250_fu_509_p2 = (or_ln250_1_fu_503_p2.read() ^ ap_const_lv1_1);
}

void Add_Char6::thread_xor_ln253_fu_536_p2() {
    xor_ln253_fu_536_p2 = (icmp_ln253_fu_531_p2.read() ^ ap_const_lv1_1);
}

void Add_Char6::thread_xos_fu_566_p1() {
    xos_fu_566_p1 = esl_sext<16,15>(trunc_ln_fu_556_p4.read());
}

void Add_Char6::thread_ytop_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ytop_s_blk_n = ytop_s_empty_n.read();
    } else {
        ytop_s_blk_n = ap_const_logic_1;
    }
}

void Add_Char6::thread_ytop_s_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_s_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, char6_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color2_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color3_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ch6x_loc_empty_n.read())))) {
        ytop_s_read = ap_const_logic_1;
    } else {
        ytop_s_read = ap_const_logic_0;
    }
}

void Add_Char6::thread_zext_ln243_fu_437_p1() {
    zext_ln243_fu_437_p1 = esl_zext<16,10>(i_0_i_i_reg_377.read());
}

void Add_Char6::thread_zext_ln245_fu_515_p1() {
    zext_ln245_fu_515_p1 = esl_zext<16,11>(j_0_i_i_reg_388.read());
}

void Add_Char6::thread_zext_ln250_fu_405_p1() {
    zext_ln250_fu_405_p1 = esl_zext<17,16>(ytop_s_dout.read());
}

void Add_Char6::thread_zext_ln251_fu_458_p1() {
    zext_ln251_fu_458_p1 = esl_zext<17,10>(i_0_i_i_reg_377.read());
}

void Add_Char6::thread_zext_ln252_1_cast_fu_467_p4() {
    zext_ln252_1_cast_fu_467_p4 = sub_ln251_fu_462_p2.read().range(11, 1);
}

void Add_Char6::thread_zext_ln252_cast_fu_419_p3() {
    zext_ln252_cast_fu_419_p3 = esl_concat<6,5>(trunc_ln253_fu_415_p1.read(), ap_const_lv5_0);
}

void Add_Char6::thread_zext_ln252_fu_482_p1() {
    zext_ln252_fu_482_p1 = esl_zext<64,11>(add_ln252_fu_477_p2.read());
}

void Add_Char6::thread_zext_ln253_1_fu_542_p1() {
    zext_ln253_1_fu_542_p1 = esl_zext<17,11>(j_0_i_i_reg_388.read());
}

void Add_Char6::thread_zext_ln253_fu_427_p1() {
    zext_ln253_fu_427_p1 = esl_zext<17,16>(ch6x_loc_dout.read());
}

void Add_Char6::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ytop_s_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, char6_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color2_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, color3_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ch6x_loc_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln243_fu_441_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln245_fu_519_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln245_fu_519_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

