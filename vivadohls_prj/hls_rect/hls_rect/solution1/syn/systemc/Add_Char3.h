// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Add_Char3_HH_
#define _Add_Char3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Add_Char1_letter.h"

namespace ap_rtl {

struct Add_Char3 : public sc_module {
    // Port declarations 61
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > src_data_stream_0_V_dout;
    sc_in< sc_logic > src_data_stream_0_V_empty_n;
    sc_out< sc_logic > src_data_stream_0_V_read;
    sc_in< sc_lv<8> > src_data_stream_1_V_dout;
    sc_in< sc_logic > src_data_stream_1_V_empty_n;
    sc_out< sc_logic > src_data_stream_1_V_read;
    sc_in< sc_lv<8> > src_data_stream_2_V_dout;
    sc_in< sc_logic > src_data_stream_2_V_empty_n;
    sc_out< sc_logic > src_data_stream_2_V_read;
    sc_in< sc_lv<8> > src_data_stream_3_V_dout;
    sc_in< sc_logic > src_data_stream_3_V_empty_n;
    sc_out< sc_logic > src_data_stream_3_V_read;
    sc_out< sc_lv<8> > dst_data_stream_0_V_din;
    sc_in< sc_logic > dst_data_stream_0_V_full_n;
    sc_out< sc_logic > dst_data_stream_0_V_write;
    sc_out< sc_lv<8> > dst_data_stream_1_V_din;
    sc_in< sc_logic > dst_data_stream_1_V_full_n;
    sc_out< sc_logic > dst_data_stream_1_V_write;
    sc_out< sc_lv<8> > dst_data_stream_2_V_din;
    sc_in< sc_logic > dst_data_stream_2_V_full_n;
    sc_out< sc_logic > dst_data_stream_2_V_write;
    sc_out< sc_lv<8> > dst_data_stream_3_V_din;
    sc_in< sc_logic > dst_data_stream_3_V_full_n;
    sc_out< sc_logic > dst_data_stream_3_V_write;
    sc_in< sc_lv<16> > ch3x_loc_dout;
    sc_in< sc_logic > ch3x_loc_empty_n;
    sc_out< sc_logic > ch3x_loc_read;
    sc_in< sc_lv<16> > ytop_s_dout;
    sc_in< sc_logic > ytop_s_empty_n;
    sc_out< sc_logic > ytop_s_read;
    sc_in< sc_lv<8> > char3_dout;
    sc_in< sc_logic > char3_empty_n;
    sc_out< sc_logic > char3_read;
    sc_in< sc_lv<8> > color1_dout;
    sc_in< sc_logic > color1_empty_n;
    sc_out< sc_logic > color1_read;
    sc_in< sc_lv<8> > color2_dout;
    sc_in< sc_logic > color2_empty_n;
    sc_out< sc_logic > color2_read;
    sc_in< sc_lv<8> > color3_dout;
    sc_in< sc_logic > color3_empty_n;
    sc_out< sc_logic > color3_read;
    sc_out< sc_lv<16> > ytop_out_din;
    sc_in< sc_logic > ytop_out_full_n;
    sc_out< sc_logic > ytop_out_write;
    sc_out< sc_lv<8> > color1_out_din;
    sc_in< sc_logic > color1_out_full_n;
    sc_out< sc_logic > color1_out_write;
    sc_out< sc_lv<8> > color2_out_din;
    sc_in< sc_logic > color2_out_full_n;
    sc_out< sc_logic > color2_out_write;
    sc_out< sc_lv<8> > color3_out_din;
    sc_in< sc_logic > color3_out_full_n;
    sc_out< sc_logic > color3_out_write;


    // Module declarations
    Add_Char3(sc_module_name name);
    SC_HAS_PROCESS(Add_Char3);

    ~Add_Char3();

    sc_trace_file* mVcdFile;

    Add_Char1_letter* letter295_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > letter295_address0;
    sc_signal< sc_logic > letter295_ce0;
    sc_signal< sc_lv<16> > letter295_q0;
    sc_signal< sc_logic > src_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln155_reg_802;
    sc_signal< sc_logic > src_data_stream_1_V_blk_n;
    sc_signal< sc_logic > src_data_stream_2_V_blk_n;
    sc_signal< sc_logic > src_data_stream_3_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln155_reg_802_pp0_iter1_reg;
    sc_signal< sc_logic > dst_data_stream_1_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_2_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_3_V_blk_n;
    sc_signal< sc_logic > ch3x_loc_blk_n;
    sc_signal< sc_logic > ytop_s_blk_n;
    sc_signal< sc_logic > char3_blk_n;
    sc_signal< sc_logic > color1_blk_n;
    sc_signal< sc_logic > color2_blk_n;
    sc_signal< sc_logic > color3_blk_n;
    sc_signal< sc_logic > ytop_out_blk_n;
    sc_signal< sc_logic > color1_out_blk_n;
    sc_signal< sc_logic > color2_out_blk_n;
    sc_signal< sc_logic > color3_out_blk_n;
    sc_signal< sc_lv<11> > j_0_i_i_reg_472;
    sc_signal< sc_lv<16> > ytop_read_reg_728;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<8> > markpix_val_0_reg_733;
    sc_signal< sc_lv<8> > markpix_val_1_reg_738;
    sc_signal< sc_lv<8> > markpix_val_2_reg_743;
    sc_signal< sc_lv<16> > ch3x_loc_read_reg_748;
    sc_signal< sc_lv<1> > icmp_ln159_fu_483_p2;
    sc_signal< sc_lv<1> > icmp_ln159_reg_754;
    sc_signal< sc_lv<17> > zext_ln160_fu_489_p1;
    sc_signal< sc_lv<17> > zext_ln160_reg_759;
    sc_signal< sc_lv<17> > add_ln160_fu_493_p2;
    sc_signal< sc_lv<17> > add_ln160_reg_764;
    sc_signal< sc_lv<11> > zext_ln162_cast_fu_503_p3;
    sc_signal< sc_lv<11> > zext_ln162_cast_reg_769;
    sc_signal< sc_lv<17> > add_ln163_fu_515_p2;
    sc_signal< sc_lv<17> > add_ln163_reg_774;
    sc_signal< sc_lv<10> > i_fu_531_p2;
    sc_signal< sc_lv<10> > i_reg_782;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln153_fu_525_p2;
    sc_signal< sc_lv<1> > xor_ln160_fu_593_p2;
    sc_signal< sc_lv<1> > xor_ln160_reg_792;
    sc_signal< sc_lv<16> > p_Val2_s_reg_797;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln155_fu_603_p2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > j_fu_609_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > p_Result_s_fu_665_p2;
    sc_signal< sc_lv<1> > p_Result_s_reg_811;
    sc_signal< sc_lv<1> > and_ln163_1_fu_676_p2;
    sc_signal< sc_lv<1> > and_ln163_1_reg_818;
    sc_signal< sc_lv<8> > tmp_fu_700_p3;
    sc_signal< sc_lv<8> > tmp_reg_826;
    sc_signal< sc_lv<8> > tmp_34_fu_707_p3;
    sc_signal< sc_lv<8> > tmp_34_reg_831;
    sc_signal< sc_lv<8> > tmp_35_fu_714_p3;
    sc_signal< sc_lv<8> > tmp_35_reg_836;
    sc_signal< sc_lv<8> > tmp_36_fu_721_p3;
    sc_signal< sc_lv<8> > tmp_36_reg_841;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_lv<10> > i_0_i_i_reg_461;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > zext_ln162_fu_566_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<6> > trunc_ln163_fu_499_p1;
    sc_signal< sc_lv<17> > zext_ln163_fu_511_p1;
    sc_signal< sc_lv<16> > zext_ln153_fu_521_p1;
    sc_signal< sc_lv<17> > zext_ln161_fu_542_p1;
    sc_signal< sc_lv<17> > sub_ln161_fu_546_p2;
    sc_signal< sc_lv<11> > zext_ln162_1_cast_fu_551_p4;
    sc_signal< sc_lv<11> > add_ln162_fu_561_p2;
    sc_signal< sc_lv<1> > icmp_ln160_1_fu_571_p2;
    sc_signal< sc_lv<1> > xor_ln160_1_fu_576_p2;
    sc_signal< sc_lv<1> > or_ln160_fu_582_p2;
    sc_signal< sc_lv<1> > icmp_ln160_fu_537_p2;
    sc_signal< sc_lv<1> > or_ln160_1_fu_587_p2;
    sc_signal< sc_lv<16> > zext_ln155_fu_599_p1;
    sc_signal< sc_lv<1> > icmp_ln163_fu_615_p2;
    sc_signal< sc_lv<17> > zext_ln163_1_fu_626_p1;
    sc_signal< sc_lv<16> > sub_ln164_fu_635_p2;
    sc_signal< sc_lv<15> > trunc_ln_fu_640_p4;
    sc_signal< sc_lv<16> > xos_fu_650_p1;
    sc_signal< sc_lv<16> > shl_ln791_fu_654_p2;
    sc_signal< sc_lv<16> > and_ln791_fu_660_p2;
    sc_signal< sc_lv<1> > icmp_ln163_1_fu_630_p2;
    sc_signal< sc_lv<1> > and_ln163_fu_671_p2;
    sc_signal< sc_lv<1> > xor_ln163_fu_620_p2;
    sc_signal< sc_lv<8> > select_ln165_fu_682_p3;
    sc_signal< sc_lv<8> > select_ln165_1_fu_688_p3;
    sc_signal< sc_lv<8> > select_ln165_2_fu_694_p3;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<8> ap_const_lv8_1A;
    static const sc_lv<17> ap_const_lv17_40;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<17> ap_const_lv17_20;
    static const sc_lv<10> ap_const_lv10_2D0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<11> ap_const_lv11_500;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln160_fu_493_p2();
    void thread_add_ln162_fu_561_p2();
    void thread_add_ln163_fu_515_p2();
    void thread_and_ln163_1_fu_676_p2();
    void thread_and_ln163_fu_671_p2();
    void thread_and_ln791_fu_660_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ch3x_loc_blk_n();
    void thread_ch3x_loc_read();
    void thread_char3_blk_n();
    void thread_char3_read();
    void thread_color1_blk_n();
    void thread_color1_out_blk_n();
    void thread_color1_out_din();
    void thread_color1_out_write();
    void thread_color1_read();
    void thread_color2_blk_n();
    void thread_color2_out_blk_n();
    void thread_color2_out_din();
    void thread_color2_out_write();
    void thread_color2_read();
    void thread_color3_blk_n();
    void thread_color3_out_blk_n();
    void thread_color3_out_din();
    void thread_color3_out_write();
    void thread_color3_read();
    void thread_dst_data_stream_0_V_blk_n();
    void thread_dst_data_stream_0_V_din();
    void thread_dst_data_stream_0_V_write();
    void thread_dst_data_stream_1_V_blk_n();
    void thread_dst_data_stream_1_V_din();
    void thread_dst_data_stream_1_V_write();
    void thread_dst_data_stream_2_V_blk_n();
    void thread_dst_data_stream_2_V_din();
    void thread_dst_data_stream_2_V_write();
    void thread_dst_data_stream_3_V_blk_n();
    void thread_dst_data_stream_3_V_din();
    void thread_dst_data_stream_3_V_write();
    void thread_i_fu_531_p2();
    void thread_icmp_ln153_fu_525_p2();
    void thread_icmp_ln155_fu_603_p2();
    void thread_icmp_ln159_fu_483_p2();
    void thread_icmp_ln160_1_fu_571_p2();
    void thread_icmp_ln160_fu_537_p2();
    void thread_icmp_ln163_1_fu_630_p2();
    void thread_icmp_ln163_fu_615_p2();
    void thread_j_fu_609_p2();
    void thread_letter295_address0();
    void thread_letter295_ce0();
    void thread_or_ln160_1_fu_587_p2();
    void thread_or_ln160_fu_582_p2();
    void thread_p_Result_s_fu_665_p2();
    void thread_select_ln165_1_fu_688_p3();
    void thread_select_ln165_2_fu_694_p3();
    void thread_select_ln165_fu_682_p3();
    void thread_shl_ln791_fu_654_p2();
    void thread_src_data_stream_0_V_blk_n();
    void thread_src_data_stream_0_V_read();
    void thread_src_data_stream_1_V_blk_n();
    void thread_src_data_stream_1_V_read();
    void thread_src_data_stream_2_V_blk_n();
    void thread_src_data_stream_2_V_read();
    void thread_src_data_stream_3_V_blk_n();
    void thread_src_data_stream_3_V_read();
    void thread_sub_ln161_fu_546_p2();
    void thread_sub_ln164_fu_635_p2();
    void thread_tmp_34_fu_707_p3();
    void thread_tmp_35_fu_714_p3();
    void thread_tmp_36_fu_721_p3();
    void thread_tmp_fu_700_p3();
    void thread_trunc_ln163_fu_499_p1();
    void thread_trunc_ln_fu_640_p4();
    void thread_xor_ln160_1_fu_576_p2();
    void thread_xor_ln160_fu_593_p2();
    void thread_xor_ln163_fu_620_p2();
    void thread_xos_fu_650_p1();
    void thread_ytop_out_blk_n();
    void thread_ytop_out_din();
    void thread_ytop_out_write();
    void thread_ytop_s_blk_n();
    void thread_ytop_s_read();
    void thread_zext_ln153_fu_521_p1();
    void thread_zext_ln155_fu_599_p1();
    void thread_zext_ln160_fu_489_p1();
    void thread_zext_ln161_fu_542_p1();
    void thread_zext_ln162_1_cast_fu_551_p4();
    void thread_zext_ln162_cast_fu_503_p3();
    void thread_zext_ln162_fu_566_p1();
    void thread_zext_ln163_1_fu_626_p1();
    void thread_zext_ln163_fu_511_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
