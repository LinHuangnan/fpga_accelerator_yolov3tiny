// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Add_Char6_HH_
#define _Add_Char6_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Add_Char1_letter.h"

namespace ap_rtl {

struct Add_Char6 : public sc_module {
    // Port declarations 52
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > src_data_stream_0_V_dout;
    sc_in< sc_logic > src_data_stream_0_V_empty_n;
    sc_out< sc_logic > src_data_stream_0_V_read;
    sc_in< sc_lv<8> > src_data_stream_1_V_dout;
    sc_in< sc_logic > src_data_stream_1_V_empty_n;
    sc_out< sc_logic > src_data_stream_1_V_read;
    sc_in< sc_lv<8> > src_data_stream_2_V_dout;
    sc_in< sc_logic > src_data_stream_2_V_empty_n;
    sc_out< sc_logic > src_data_stream_2_V_read;
    sc_in< sc_lv<8> > src_data_stream_3_V_dout;
    sc_in< sc_logic > src_data_stream_3_V_empty_n;
    sc_out< sc_logic > src_data_stream_3_V_read;
    sc_out< sc_lv<8> > dst_data_stream_0_V_din;
    sc_in< sc_logic > dst_data_stream_0_V_full_n;
    sc_out< sc_logic > dst_data_stream_0_V_write;
    sc_out< sc_lv<8> > dst_data_stream_1_V_din;
    sc_in< sc_logic > dst_data_stream_1_V_full_n;
    sc_out< sc_logic > dst_data_stream_1_V_write;
    sc_out< sc_lv<8> > dst_data_stream_2_V_din;
    sc_in< sc_logic > dst_data_stream_2_V_full_n;
    sc_out< sc_logic > dst_data_stream_2_V_write;
    sc_out< sc_lv<8> > dst_data_stream_3_V_din;
    sc_in< sc_logic > dst_data_stream_3_V_full_n;
    sc_out< sc_logic > dst_data_stream_3_V_write;
    sc_in< sc_lv<16> > ch6x_loc_dout;
    sc_in< sc_logic > ch6x_loc_empty_n;
    sc_out< sc_logic > ch6x_loc_read;
    sc_in< sc_lv<16> > ytop_s_dout;
    sc_in< sc_logic > ytop_s_empty_n;
    sc_out< sc_logic > ytop_s_read;
    sc_in< sc_lv<8> > char6_dout;
    sc_in< sc_logic > char6_empty_n;
    sc_out< sc_logic > char6_read;
    sc_in< sc_lv<8> > color1_dout;
    sc_in< sc_logic > color1_empty_n;
    sc_out< sc_logic > color1_read;
    sc_in< sc_lv<8> > color2_dout;
    sc_in< sc_logic > color2_empty_n;
    sc_out< sc_logic > color2_read;
    sc_in< sc_lv<8> > color3_dout;
    sc_in< sc_logic > color3_empty_n;
    sc_out< sc_logic > color3_read;


    // Module declarations
    Add_Char6(sc_module_name name);
    SC_HAS_PROCESS(Add_Char6);

    ~Add_Char6();

    sc_trace_file* mVcdFile;

    Add_Char1_letter* letter298_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<10> > letter298_address0;
    sc_signal< sc_logic > letter298_ce0;
    sc_signal< sc_lv<16> > letter298_q0;
    sc_signal< sc_logic > src_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln245_reg_718;
    sc_signal< sc_logic > src_data_stream_1_V_blk_n;
    sc_signal< sc_logic > src_data_stream_2_V_blk_n;
    sc_signal< sc_logic > src_data_stream_3_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln245_reg_718_pp0_iter1_reg;
    sc_signal< sc_logic > dst_data_stream_1_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_2_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_3_V_blk_n;
    sc_signal< sc_logic > ch6x_loc_blk_n;
    sc_signal< sc_logic > ytop_s_blk_n;
    sc_signal< sc_logic > char6_blk_n;
    sc_signal< sc_logic > color1_blk_n;
    sc_signal< sc_logic > color2_blk_n;
    sc_signal< sc_logic > color3_blk_n;
    sc_signal< sc_lv<11> > j_0_i_i_reg_388;
    sc_signal< sc_lv<16> > ytop_read_reg_644;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<8> > markpix_val_0_reg_649;
    sc_signal< sc_lv<8> > markpix_val_1_reg_654;
    sc_signal< sc_lv<8> > markpix_val_2_reg_659;
    sc_signal< sc_lv<16> > ch6x_loc_read_reg_664;
    sc_signal< sc_lv<1> > icmp_ln249_fu_399_p2;
    sc_signal< sc_lv<1> > icmp_ln249_reg_670;
    sc_signal< sc_lv<17> > zext_ln250_fu_405_p1;
    sc_signal< sc_lv<17> > zext_ln250_reg_675;
    sc_signal< sc_lv<17> > add_ln250_fu_409_p2;
    sc_signal< sc_lv<17> > add_ln250_reg_680;
    sc_signal< sc_lv<11> > zext_ln252_cast_fu_419_p3;
    sc_signal< sc_lv<11> > zext_ln252_cast_reg_685;
    sc_signal< sc_lv<17> > add_ln253_fu_431_p2;
    sc_signal< sc_lv<17> > add_ln253_reg_690;
    sc_signal< sc_lv<10> > i_fu_447_p2;
    sc_signal< sc_lv<10> > i_reg_698;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln243_fu_441_p2;
    sc_signal< sc_lv<1> > xor_ln250_fu_509_p2;
    sc_signal< sc_lv<1> > xor_ln250_reg_708;
    sc_signal< sc_lv<16> > p_Val2_s_reg_713;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln245_fu_519_p2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > j_fu_525_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > p_Result_s_fu_581_p2;
    sc_signal< sc_lv<1> > p_Result_s_reg_727;
    sc_signal< sc_lv<1> > and_ln253_1_fu_592_p2;
    sc_signal< sc_lv<1> > and_ln253_1_reg_734;
    sc_signal< sc_lv<8> > tmp_fu_616_p3;
    sc_signal< sc_lv<8> > tmp_reg_742;
    sc_signal< sc_lv<8> > tmp_13_fu_623_p3;
    sc_signal< sc_lv<8> > tmp_13_reg_747;
    sc_signal< sc_lv<8> > tmp_14_fu_630_p3;
    sc_signal< sc_lv<8> > tmp_14_reg_752;
    sc_signal< sc_lv<8> > tmp_15_fu_637_p3;
    sc_signal< sc_lv<8> > tmp_15_reg_757;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_lv<10> > i_0_i_i_reg_377;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > zext_ln252_fu_482_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<6> > trunc_ln253_fu_415_p1;
    sc_signal< sc_lv<17> > zext_ln253_fu_427_p1;
    sc_signal< sc_lv<16> > zext_ln243_fu_437_p1;
    sc_signal< sc_lv<17> > zext_ln251_fu_458_p1;
    sc_signal< sc_lv<17> > sub_ln251_fu_462_p2;
    sc_signal< sc_lv<11> > zext_ln252_1_cast_fu_467_p4;
    sc_signal< sc_lv<11> > add_ln252_fu_477_p2;
    sc_signal< sc_lv<1> > icmp_ln250_1_fu_487_p2;
    sc_signal< sc_lv<1> > xor_ln250_1_fu_492_p2;
    sc_signal< sc_lv<1> > or_ln250_fu_498_p2;
    sc_signal< sc_lv<1> > icmp_ln250_fu_453_p2;
    sc_signal< sc_lv<1> > or_ln250_1_fu_503_p2;
    sc_signal< sc_lv<16> > zext_ln245_fu_515_p1;
    sc_signal< sc_lv<1> > icmp_ln253_fu_531_p2;
    sc_signal< sc_lv<17> > zext_ln253_1_fu_542_p1;
    sc_signal< sc_lv<16> > sub_ln254_fu_551_p2;
    sc_signal< sc_lv<15> > trunc_ln_fu_556_p4;
    sc_signal< sc_lv<16> > xos_fu_566_p1;
    sc_signal< sc_lv<16> > shl_ln791_fu_570_p2;
    sc_signal< sc_lv<16> > and_ln791_fu_576_p2;
    sc_signal< sc_lv<1> > icmp_ln253_1_fu_546_p2;
    sc_signal< sc_lv<1> > and_ln253_fu_587_p2;
    sc_signal< sc_lv<1> > xor_ln253_fu_536_p2;
    sc_signal< sc_lv<8> > select_ln255_fu_598_p3;
    sc_signal< sc_lv<8> > select_ln255_1_fu_604_p3;
    sc_signal< sc_lv<8> > select_ln255_2_fu_610_p3;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<8> ap_const_lv8_1A;
    static const sc_lv<17> ap_const_lv17_40;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<17> ap_const_lv17_20;
    static const sc_lv<10> ap_const_lv10_2D0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<11> ap_const_lv11_500;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln250_fu_409_p2();
    void thread_add_ln252_fu_477_p2();
    void thread_add_ln253_fu_431_p2();
    void thread_and_ln253_1_fu_592_p2();
    void thread_and_ln253_fu_587_p2();
    void thread_and_ln791_fu_576_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ch6x_loc_blk_n();
    void thread_ch6x_loc_read();
    void thread_char6_blk_n();
    void thread_char6_read();
    void thread_color1_blk_n();
    void thread_color1_read();
    void thread_color2_blk_n();
    void thread_color2_read();
    void thread_color3_blk_n();
    void thread_color3_read();
    void thread_dst_data_stream_0_V_blk_n();
    void thread_dst_data_stream_0_V_din();
    void thread_dst_data_stream_0_V_write();
    void thread_dst_data_stream_1_V_blk_n();
    void thread_dst_data_stream_1_V_din();
    void thread_dst_data_stream_1_V_write();
    void thread_dst_data_stream_2_V_blk_n();
    void thread_dst_data_stream_2_V_din();
    void thread_dst_data_stream_2_V_write();
    void thread_dst_data_stream_3_V_blk_n();
    void thread_dst_data_stream_3_V_din();
    void thread_dst_data_stream_3_V_write();
    void thread_i_fu_447_p2();
    void thread_icmp_ln243_fu_441_p2();
    void thread_icmp_ln245_fu_519_p2();
    void thread_icmp_ln249_fu_399_p2();
    void thread_icmp_ln250_1_fu_487_p2();
    void thread_icmp_ln250_fu_453_p2();
    void thread_icmp_ln253_1_fu_546_p2();
    void thread_icmp_ln253_fu_531_p2();
    void thread_internal_ap_ready();
    void thread_j_fu_525_p2();
    void thread_letter298_address0();
    void thread_letter298_ce0();
    void thread_or_ln250_1_fu_503_p2();
    void thread_or_ln250_fu_498_p2();
    void thread_p_Result_s_fu_581_p2();
    void thread_real_start();
    void thread_select_ln255_1_fu_604_p3();
    void thread_select_ln255_2_fu_610_p3();
    void thread_select_ln255_fu_598_p3();
    void thread_shl_ln791_fu_570_p2();
    void thread_src_data_stream_0_V_blk_n();
    void thread_src_data_stream_0_V_read();
    void thread_src_data_stream_1_V_blk_n();
    void thread_src_data_stream_1_V_read();
    void thread_src_data_stream_2_V_blk_n();
    void thread_src_data_stream_2_V_read();
    void thread_src_data_stream_3_V_blk_n();
    void thread_src_data_stream_3_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_sub_ln251_fu_462_p2();
    void thread_sub_ln254_fu_551_p2();
    void thread_tmp_13_fu_623_p3();
    void thread_tmp_14_fu_630_p3();
    void thread_tmp_15_fu_637_p3();
    void thread_tmp_fu_616_p3();
    void thread_trunc_ln253_fu_415_p1();
    void thread_trunc_ln_fu_556_p4();
    void thread_xor_ln250_1_fu_492_p2();
    void thread_xor_ln250_fu_509_p2();
    void thread_xor_ln253_fu_536_p2();
    void thread_xos_fu_566_p1();
    void thread_ytop_s_blk_n();
    void thread_ytop_s_read();
    void thread_zext_ln243_fu_437_p1();
    void thread_zext_ln245_fu_515_p1();
    void thread_zext_ln250_fu_405_p1();
    void thread_zext_ln251_fu_458_p1();
    void thread_zext_ln252_1_cast_fu_467_p4();
    void thread_zext_ln252_cast_fu_419_p3();
    void thread_zext_ln252_fu_482_p1();
    void thread_zext_ln253_1_fu_542_p1();
    void thread_zext_ln253_fu_427_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
